image: python:3.10

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - .venv
    - .hypothesis

before_script:
  - python --version # For debugging
  - pip install poetry
  - poetry config virtualenvs.in-project true
  - poetry install

test:
  script:
    - poetry run pytest --cov=edea

formatting:
  script:
    - poetry run black --check edea tests --exclude tests/kicad_projects

lint:
  script:
    - poetry run ruff edea/types edea/draw tests
    - poetry run pylint edea tests

typecheck:
  script:
    - poetry run pyright edea/types edea/draw

bandit:
  script:
    - poetry run bandit -r edea

test-long-running:
  only:
    - web
  script:
    - git submodule update --init
    - poetry run pytest -k 'parse_all_pcb' -k 'parse_all_types'

#publish:
#  script:
#    - poetry build
#    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
#    - poetry config http-basic.gitlab gitlab-ci-token ${CI_JOB_TOKEN}
#    - poetry publish -r gitlab
#  artifacts:
#    paths:
#      - dist/*.whl
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc
#    - make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
